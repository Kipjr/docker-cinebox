# Jellyfin - 8096
# Transmission - 9091
# Medusa - 8081
# Radar - 7878
# Bazarr - 6767
# Jacket - 9117
#


volumes:
  nginx:
  transmission:
  data:
  jacket:
  jellyfin:
  medusa:
  bazarr:

secrets:
  openvpn_user:
    file: ./data/config/secrets/openvpn_user.cred
  openvpn_password:
    file: ./data/config/secrets/openvpn_password.cred

networks:
  REVERSE_PROXY:
    external: true
  net: #external / internet
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 192.168.8.192/29
    driver_opts:
      com.docker.network.bridge.name: cinebox_net

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    environment:
      - TZ=Europe/Amsterdam
      - SERVERNAME=cinebox.koetsier.dev
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./data/config/etc/nginx/cinebox/:/usr/share/nginx/html:ro"
      - "./data/config/etc/nginx/templates:/etc/nginx/templates"
      - "./data/logs/nginx:/var/log/nginx"
#     - "log:/var/log"
#     - "nginx:/etc/nginx"
#     - "nginx_web:/usr/share/nginx/html:ro"
    network_mode: "service:gluetun"
    depends_on:
      - "gluetun"


  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT}.rule=Host(`${PROJECT_FQDN}`)"
      - "traefik.http.routers.${PROJECT}.entrypoints=${PROJECT_ENTRYPOINT}"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8580:80/tcp
      - 8096:8096/tcp
      - 1900:1900
#      - 8097:8081
    volumes:
#      -"gluetun:/gluetun"
      - ./data/config/etc/gluetun:/gluetun
    environment:
    # See https://github.com/qdm12/gluetun/wiki
    # Openvpn
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
    # Healthcheck
      - HEALTH_VPN_DURATION_ADDITION=${HEALTH_VPN_DURATION_ADDITION:-30s}
    # Updater
      - UPDATER_PERIOD=${UPDATER_PERIOD:-8h}
    # Firewall
      - FIREWALL_DEBUG=${FIREWALL_DEBUG:-off}
    # DNS options
      - DOT=${DOT}
      - DOT_PROVIDERS=${DOT_PROVIDERS}
      - DNS_KEEP_NAMESERVER=${DNS_KEEP_NAMESERVER}
      - BLOCK_MALICIOUS=${BLOCK_MALICIOUS:-on}
      - BLOCK_SURVEILLANCE=${BLOCK_SURVEILLANCE:-on}
      - BLOCK_ADS=${BLOCK_ADS:-on}
    # Other
      - HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH=${HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH:-/gluetun/config.toml}
      - PUBLICIP_ENABLED=${PUBLICIP_ENABLED}
      - PUBLICIP_API=${PUBLICIP_API}
      - PUBLICIP_API_TOKEN=${PUBLICIP_API_TOKEN}
      - TZ=${TZ:-Europe/Amsterdam}
    secrets:
      - source: openvpn_user
      - source: openvpn_password
    networks:
      - net
      - REVERSE_PROXY

  debug: #1234
    container_name: debug
    build: ./test
    network_mode: "service:gluetun"
    restart: "no"
    stdin_open: true
    tty: true
    profiles:
    - debug


  portical:
    image: "ghcr.io/kipjr/docker-portical:latest"
#    environment:
#      - "PORTICAL_UPNP_ROOT_URL=http://internal-gateway-ip:5000/somePath.xml"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
    #network_mode: host
    command: "/opt/portical/run poll"
    networks:
      - net
    profiles:
      - portical


  transmission:
    container_name: transmission
    image: linuxserver/transmission:latest
    restart: "unless-stopped"
    network_mode: "service:gluetun"
    stdin_open: true
    tty: true
    environment:
      - TZ=${TZ:-Europe/Amsterdam}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes:
#     - "transmission:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "./data/config/etc/transmission:/config"
#      - "data:/media"
      - "./data/media:/media"
#    ports:
#      - 9091:9091

  radarr:
    container_name: radarr
    image: "linuxserver/radarr:latest"
    restart: "unless-stopped"
    depends_on:
      - transmission
    environment:
      - TZ=Europe/Amsterdam
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK_SET=022
    network_mode: "service:gluetun"
    stdin_open: true
    tty: true
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./data/config/etc/radarr:/config"
      - "./data/media:/media"
#     - "radarr:/config"
#    ports:
#      - 7878:7878

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    restart: "unless-stopped"
    network_mode: "service:gluetun"
    environment:
      - TZ=${TZ:-Europe/Amsterdam}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - AUTO_UPDATE=true
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
#      - "jacket:/config"
      - "./data/config/etc/jacket:/config"
      - "./data/media/downloads/blackhole:/downloads"
#    ports:
#      - 9117:9117


  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: "unless-stopped"
    depends_on: 
      - jackett
    network_mode: "service:gluetun"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - LOG_HTML=${LOG_HTML:-false}
      - TZ=${TZ:-Europe/Amsterdam}
#   ports:
#     - 8191:8191

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: "unless-stopped"
    labels:
      - "portical.upnp.forward=1900:1900"
#    network_mode: "host"
    network_mode: "service:gluetun"
#    networks:
#      - net
    environment:
      - TZ=${TZ:-Europe/Amsterdam}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
#      - "jellyfin:/config"
      - ./data/config/etc/jellyfin:/config
      - ./data/media/series:/data/tvshows
      - ./data/media/movies:/data/movies
#    devices:
#      - /dev/dri:/dev/dri #optional
#      - /dev/vchiq:/dev/vchiq #optional
#      - /dev/video10:/dev/video10 #optional
#      - /dev/video11:/dev/video11 #optional
#      - /dev/video12:/dev/video12 #optional
#    ports:
#      - 8096:8096

  medusa:
#    image: lscr.io/linuxserver/medusa:latest
    image: pymedusa/medusa
    container_name: medusa
    restart: "unless-stopped"
    network_mode: "service:gluetun"
    environment:
      - TZ=${TZ:-Europe/Amsterdam}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
#      - "medusa:/config"
      - ./data/config/etc/medusa:/config
      - ./data/media:/media
#    ports:
#      - 8081:8081

  bazarr: 
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: "unless-stopped"
    network_mode: "service:gluetun"
    environment:
      - TZ=${TZ:-Europe/Amsterdam}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes: 
      - "/etc/localtime:/etc/localtime:ro"
#      - "bazarr:/config"
      - ./data/config/etc/bazarr:/config
      - ./data/media:/media
#    ports: 
#      - 6767:6767
